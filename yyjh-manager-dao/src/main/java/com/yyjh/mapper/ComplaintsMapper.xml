<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yyjh.mapper.ComplaintsMapper">
  <resultMap id="BaseResultMap" type="com.yyjh.pojo.Complaints">
    <result column="complaint_id" jdbcType="INTEGER" property="complaintId" />
    <result column="c_id" jdbcType="INTEGER" property="cId" />
    <result column="complaint_date" jdbcType="TIMESTAMP" property="complaintDate" />
    <result column="complaint_content" jdbcType="VARCHAR" property="complaintContent" />
    <result column="complaint_condition" jdbcType="BIT" property="complaintCondition" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    complaint_id, c_id, complaint_date, complaint_content, complaint_condition
  </sql>
  <select id="selectByExample" parameterType="com.yyjh.pojo.ComplaintsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from complaints
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.yyjh.pojo.ComplaintsExample">
    delete from complaints
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yyjh.pojo.Complaints">
    insert into complaints (complaint_id, c_id, complaint_date, 
      complaint_content, complaint_condition)
    values (#{complaintId,jdbcType=INTEGER}, #{cId,jdbcType=INTEGER}, #{complaintDate,jdbcType=TIMESTAMP}, 
      #{complaintContent,jdbcType=VARCHAR}, #{complaintCondition,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.yyjh.pojo.Complaints">
    insert into complaints
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="complaintId != null">
        complaint_id,
      </if>
      <if test="cId != null">
        c_id,
      </if>
      <if test="complaintDate != null">
        complaint_date,
      </if>
      <if test="complaintContent != null">
        complaint_content,
      </if>
      <if test="complaintCondition != null">
        complaint_condition,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="complaintId != null">
        #{complaintId,jdbcType=INTEGER},
      </if>
      <if test="cId != null">
        #{cId,jdbcType=INTEGER},
      </if>
      <if test="complaintDate != null">
        #{complaintDate,jdbcType=TIMESTAMP},
      </if>
      <if test="complaintContent != null">
        #{complaintContent,jdbcType=VARCHAR},
      </if>
      <if test="complaintCondition != null">
        #{complaintCondition,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yyjh.pojo.ComplaintsExample" resultType="java.lang.Long">
    select count(*) from complaints
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update complaints
    <set>
      <if test="record.complaintId != null">
        complaint_id = #{record.complaintId,jdbcType=INTEGER},
      </if>
      <if test="record.cId != null">
        c_id = #{record.cId,jdbcType=INTEGER},
      </if>
      <if test="record.complaintDate != null">
        complaint_date = #{record.complaintDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.complaintContent != null">
        complaint_content = #{record.complaintContent,jdbcType=VARCHAR},
      </if>
      <if test="record.complaintCondition != null">
        complaint_condition = #{record.complaintCondition,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update complaints
    set complaint_id = #{record.complaintId,jdbcType=INTEGER},
      c_id = #{record.cId,jdbcType=INTEGER},
      complaint_date = #{record.complaintDate,jdbcType=TIMESTAMP},
      complaint_content = #{record.complaintContent,jdbcType=VARCHAR},
      complaint_condition = #{record.complaintCondition,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>